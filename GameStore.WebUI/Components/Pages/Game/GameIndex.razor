@page "/game"
@inject GamesClient Client
@attribute [StreamRendering]

<PageTitle>Game Catalogue</PageTitle>

<div class="mt-2">
    <a class="btn btn-primary" role="button" href="/editgame">Add Game</a>
</div>

@if (games == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped table-bordered table-hover mt-1">
        <thead class="table-dark">
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Genre</th>
                <th>Release Date</th>
                <th class="text-end">Price</th>
                <th></th>
            </tr>
        </thead>

        <tbody>
            @foreach (var game in games)
            {
                <tr>
                    <td>@game.Id</td>
                    <td>@game.Name</td>
                    <td>@game.Genre</td>
                    <td>@game.ReleaseDate</td>
                    <td class="text-end">@game.Price.ToString("C2")</td>
                    <td>
                        <div class="d-flex">
                            <a class="btn btn-primary me-2" role="button" href="@GameUrl(game.Id)"> <i class="bi bi-pencil"></i> </a>
                            <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="@GetDeleteModalId(game)"> <i class="bi bi-trash"></i> </button>
                        </div>
                        <DeleteGame Game="@game" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code{
    private GameSummary[]? games;

    protected override async Task OnInitializedAsync()
    {
        games = await Client.GetGames();
    }

    private static string GameUrl(int id) => $"/editgame/{id}";

    private string GetDeleteModalId(GameSummary game)
    {
        return $"#{DeleteGame.GetModalId(game)}";
    }
}
